//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\dwini\Desktop\CSharpToLLVM\AntlrCSharp\CSharp.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrCSharp {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICSharpListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class CSharpBaseListener : ICSharpListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilationUnit([NotNull] CSharpParser.CompilationUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilationUnit([NotNull] CSharpParser.CompilationUnitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.usingDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingDirective([NotNull] CSharpParser.UsingDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.usingDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingDirective([NotNull] CSharpParser.UsingDirectiveContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.globalAttribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobalAttribute([NotNull] CSharpParser.GlobalAttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.globalAttribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobalAttribute([NotNull] CSharpParser.GlobalAttributeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.namespaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceDeclaration([NotNull] CSharpParser.NamespaceDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.namespaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceDeclaration([NotNull] CSharpParser.NamespaceDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDeclaration([NotNull] CSharpParser.TypeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDeclaration([NotNull] CSharpParser.TypeDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.classDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDeclaration([NotNull] CSharpParser.ClassDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.classDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDeclaration([NotNull] CSharpParser.ClassDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.interfaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceDeclaration([NotNull] CSharpParser.InterfaceDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.interfaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceDeclaration([NotNull] CSharpParser.InterfaceDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.structDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDeclaration([NotNull] CSharpParser.StructDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.structDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDeclaration([NotNull] CSharpParser.StructDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.enumDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumDeclaration([NotNull] CSharpParser.EnumDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.enumDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumDeclaration([NotNull] CSharpParser.EnumDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.baseList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseList([NotNull] CSharpParser.BaseListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.baseList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseList([NotNull] CSharpParser.BaseListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassBody([NotNull] CSharpParser.ClassBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassBody([NotNull] CSharpParser.ClassBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.interfaceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceBody([NotNull] CSharpParser.InterfaceBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.interfaceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceBody([NotNull] CSharpParser.InterfaceBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.structBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructBody([NotNull] CSharpParser.StructBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.structBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructBody([NotNull] CSharpParser.StructBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.enumBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumBody([NotNull] CSharpParser.EnumBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.enumBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumBody([NotNull] CSharpParser.EnumBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.classMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassMemberDeclaration([NotNull] CSharpParser.ClassMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.classMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassMemberDeclaration([NotNull] CSharpParser.ClassMemberDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.interfaceMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceMemberDeclaration([NotNull] CSharpParser.InterfaceMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.interfaceMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceMemberDeclaration([NotNull] CSharpParser.InterfaceMemberDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.structMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructMemberDeclaration([NotNull] CSharpParser.StructMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.structMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructMemberDeclaration([NotNull] CSharpParser.StructMemberDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDeclaration([NotNull] CSharpParser.MethodDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDeclaration([NotNull] CSharpParser.MethodDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.methodModifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodModifiers([NotNull] CSharpParser.MethodModifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.methodModifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodModifiers([NotNull] CSharpParser.MethodModifiersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.accessModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessModifier([NotNull] CSharpParser.AccessModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.accessModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessModifier([NotNull] CSharpParser.AccessModifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.otherModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOtherModifier([NotNull] CSharpParser.OtherModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.otherModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOtherModifier([NotNull] CSharpParser.OtherModifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.fieldDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldDeclaration([NotNull] CSharpParser.FieldDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.fieldDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldDeclaration([NotNull] CSharpParser.FieldDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.enumMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumMember([NotNull] CSharpParser.EnumMemberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.enumMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumMember([NotNull] CSharpParser.EnumMemberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnType([NotNull] CSharpParser.ReturnTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnType([NotNull] CSharpParser.ReturnTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] CSharpParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] CSharpParser.TypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.qualifiedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedIdentifier([NotNull] CSharpParser.QualifiedIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.qualifiedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedIdentifier([NotNull] CSharpParser.QualifiedIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeParameterList([NotNull] CSharpParser.TypeParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeParameterList([NotNull] CSharpParser.TypeParameterListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterList([NotNull] CSharpParser.ParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterList([NotNull] CSharpParser.ParameterListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] CSharpParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] CSharpParser.ParameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] CSharpParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] CSharpParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] CSharpParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] CSharpParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.localVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalVariableDeclaration([NotNull] CSharpParser.LocalVariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.localVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalVariableDeclaration([NotNull] CSharpParser.LocalVariableDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] CSharpParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] CSharpParser.ExpressionStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] CSharpParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] CSharpParser.ReturnStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] CSharpParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] CSharpParser.IfStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.elseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseClause([NotNull] CSharpParser.ElseClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.elseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseClause([NotNull] CSharpParser.ElseClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] CSharpParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] CSharpParser.WhileStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] CSharpParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] CSharpParser.ForStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] CSharpParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] CSharpParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.assignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentExpression([NotNull] CSharpParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.assignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentExpression([NotNull] CSharpParser.AssignmentExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalExpression([NotNull] CSharpParser.ConditionalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalExpression([NotNull] CSharpParser.ConditionalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.logicalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOrExpression([NotNull] CSharpParser.LogicalOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.logicalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOrExpression([NotNull] CSharpParser.LogicalOrExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.logicalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalAndExpression([NotNull] CSharpParser.LogicalAndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.logicalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalAndExpression([NotNull] CSharpParser.LogicalAndExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.equalityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpression([NotNull] CSharpParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.equalityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpression([NotNull] CSharpParser.EqualityExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpression([NotNull] CSharpParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpression([NotNull] CSharpParser.RelationalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpression([NotNull] CSharpParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpression([NotNull] CSharpParser.AdditiveExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpression([NotNull] CSharpParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpression([NotNull] CSharpParser.MultiplicativeExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] CSharpParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] CSharpParser.UnaryExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.postfixExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostfixExpression([NotNull] CSharpParser.PostfixExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.postfixExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostfixExpression([NotNull] CSharpParser.PostfixExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpression([NotNull] CSharpParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpression([NotNull] CSharpParser.PrimaryExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.methodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCall([NotNull] CSharpParser.MethodCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.methodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCall([NotNull] CSharpParser.MethodCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccess([NotNull] CSharpParser.MemberAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccess([NotNull] CSharpParser.MemberAccessContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.functionCallStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallStatement([NotNull] CSharpParser.FunctionCallStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.functionCallStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallStatement([NotNull] CSharpParser.FunctionCallStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.attributeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeList([NotNull] CSharpParser.AttributeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.attributeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeList([NotNull] CSharpParser.AttributeListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute([NotNull] CSharpParser.AttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute([NotNull] CSharpParser.AttributeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.attributeArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeArgumentList([NotNull] CSharpParser.AttributeArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.attributeArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeArgumentList([NotNull] CSharpParser.AttributeArgumentListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.attributeArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeArgument([NotNull] CSharpParser.AttributeArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.attributeArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeArgument([NotNull] CSharpParser.AttributeArgumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonOperator([NotNull] CSharpParser.ComparisonOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonOperator([NotNull] CSharpParser.ComparisonOperatorContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace AntlrCSharp
